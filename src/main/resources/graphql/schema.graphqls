type Query {

	# find all categories from database
	findAllCategories: [Category]!

	# find all product from database
	findAllProducts: [Product]!

	# find a single entity using primary key
	findCategory(id: ID!): Category
	findProduct(id: ID!): Product

}

type Mutation {

	createProduct(categoryid: Int!, name: String!, description: String!, price: Float!, weight: Float!, picture1: String!, picture2: String!, picture3: String!): [Product]!
	updateProduct(id: Int!, categoryid: Int!, update: ProductUpdater!): Product
	deleteProduct(id: Int!): [Product]!

	createCategory(name: String!, picture: String!): [Category]!
	updateCategory(id: Int!, update: CategoryUpdater!): Category
	deleteCategory(id: Int!): [Category]!
}

type Category {
	id: ID!
	name: String!
	picture: String!
	products: [Product]!
}

input CategoryUpdater {
	name: String!
	picture: String!
}

type Product {
	id: ID!
	name: String!
	description: String!
	price: Float!
	weight: Float!
	picture1: String!
	picture2: String!
	picture3: String!
	category: Category!
}

input ProductUpdater {
	name: String!
	description: String!
	price: Float!
	weight: Float!
	picture1: String!
	picture2: String!
	picture3: String!
}
